{ pkgs, inputs, private, ... }:
let
  foo = "bar";
in
{
  home.stateVersion = "23.05";

  home.packages = with pkgs; [
    alacritty
    aspell
    aspellDicts.en
    aspellDicts.en-computers
    autoconf
    #awscli2
    bat
    bc
    clang
    coreutils
    diff-so-fancy
    duf
    fd
    (ffmpeg-full.override {game-music-emu = null;})
    fx
    fzf
    git-lfs
    git-filter-repo
    gnumake
    gnupg
    gnused
    htop
    iftop
    influxdb
    ipcalc
    jq
    kitty
    lorri
    ncurses6
    nix-prefetch-git
    nmap
    #nginx
    python3
    ripgrep
    rsync
    silver-searcher
    ssm-session-manager-plugin
    up
    websocat
    wget
    youtube-dl
  ];

  home.sessionVariables = {
    PAGER = "less -R";
  };

  programs.git = {
    enable = true;
    userName = private.user-info.fullName;
    userEmail = private.user-info.primaryEmail;
    extraConfig = {
      github = {
        user = "srstrong";
      };
      core = {
        pager = "diff-so-fancy | less --tabs=4 -RFX";
      };
      interactive = {
        diffFilter = "diff-so-fancy --patch";
      };
      color = {
        ui = true;
        diff-highlight = {
          oldNormal = "red bold";
          oldHighlight = "red bold 52";
          newNormal = "green bold";
          newHighlight = "green bold 22";
        };
        diff = {
          meta = "11";
          frag = "magenta bold";
          func = "146 bold";
          commit = "yellow bold";
          old = "red bold";
          new = "green bold";
          whitespace = "red reverse";
        };
      };
    };
  };

  programs.direnv = {
    enable = true;
    nix-direnv.enable = true;
  };

  programs.direnv = {
    enable = true;
    nix-direnv.enable = true;
  };

  programs.bash.enable = false;
  programs.zsh.enable = true;
  programs.emacs.enable = true;
  programs.emacs.package = 
    (
      pkgs.emacsWithPackagesFromUsePackage {
        alwaysEnsure = true;
        alwaysTangle = true;

        # Custom overlay derived from 'emacs' flake input
#        package = pkgs.emacs;
        config = "";
            }
    );
}
